<?php

require_once dirname(__FILE__) . '/../../../../../Scorpio/Sco/PHP/Helper.php';

/**
 * Test class for Sco_PHP_Helper.
 * Generated by PHPUnit on 2012-07-08 at 03:36:22.
 */
class Sco_PHP_HelperTest extends PHPUnit_Framework_TestCase
{

	/**
	 * @var Sco_PHP_Helper
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new Sco_PHP_Helper;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	/**
	 * Generated from @assert (true) === true.
	 *
	 * @covers Sco_PHP_Helper::var_ini_bool
	 */
	public function testVar_ini_bool()
	{
		$this->assertSame(true, Sco_PHP_Helper::var_ini_bool(true));
	}

	/**
	 * Generated from @assert ('on') === true.
	 *
	 * @covers Sco_PHP_Helper::var_ini_bool
	 */
	public function testVar_ini_bool2()
	{
		$this->assertSame(true, Sco_PHP_Helper::var_ini_bool('on'));
	}

	/**
	 * Generated from @assert ('true') === true.
	 *
	 * @covers Sco_PHP_Helper::var_ini_bool
	 */
	public function testVar_ini_bool3()
	{
		$this->assertSame(true, Sco_PHP_Helper::var_ini_bool('true'));
	}

	/**
	 * Generated from @assert ('yes') === true.
	 *
	 * @covers Sco_PHP_Helper::var_ini_bool
	 */
	public function testVar_ini_bool4()
	{
		$this->assertSame(true, Sco_PHP_Helper::var_ini_bool('yes'));
	}

	/**
	 * Generated from @assert (false) === false.
	 *
	 * @covers Sco_PHP_Helper::var_ini_bool
	 */
	public function testVar_ini_bool5()
	{
		$this->assertSame(false, Sco_PHP_Helper::var_ini_bool(false));
	}

	/**
	 * Generated from @assert ('off') === false.
	 *
	 * @covers Sco_PHP_Helper::var_ini_bool
	 */
	public function testVar_ini_bool6()
	{
		$this->assertSame(false, Sco_PHP_Helper::var_ini_bool('off'));
	}

	/**
	 * Generated from @assert ('false') === false.
	 *
	 * @covers Sco_PHP_Helper::var_ini_bool
	 */
	public function testVar_ini_bool7()
	{
		$this->assertSame(false, Sco_PHP_Helper::var_ini_bool('false'));
	}

	/**
	 * Generated from @assert ('no') === false.
	 *
	 * @covers Sco_PHP_Helper::var_ini_bool
	 */
	public function testVar_ini_bool8()
	{
		$this->assertSame(false, Sco_PHP_Helper::var_ini_bool('no'));
	}

	/**
	 * @covers Sco_PHP_Helper::include_file
	 * @todo Implement testInclude_file().
	 */
	public function testInclude_file()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::get_runtime_defined_vars
	 * @todo Implement testGet_runtime_defined_vars().
	 */
	public function testGet_runtime_defined_vars()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::func_exists
	 * @todo Implement testFunc_exists().
	 */
	public function testFunc_exists()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::sprint
	 * @todo Implement testSprint().
	 */
	public function testSprint()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::vprint
	 * @todo Implement testVprint().
	 */
	public function testVprint()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::sprintnl
	 * @todo Implement testSprintnl().
	 */
	public function testSprintnl()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::vprintnl
	 * @todo Implement testVprintnl().
	 */
	public function testVprintnl()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::void
	 * @todo Implement testVoid().
	 */
	public function testVoid()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::errno_const
	 * @todo Implement testErrno_const().
	 */
	public function testErrno_const()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::phpinfo_array
	 * @todo Implement testPhpinfo_array().
	 */
	public function testPhpinfo_array()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::define
	 * @todo Implement testDefine().
	 */
	public function testDefine()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers Sco_PHP_Helper::func_get_arg
	 * @todo Implement testFunc_get_arg().
	 */
	public function testFunc_get_arg()
	{
		$a = 1;
		$b = 2;

		$this->_testFunc_get_arg(&$a, $b);

		$this->assertSame(99, $a);
		$this->assertSame(2, $b);
	}

	/**
	 * @covers Sco_PHP_Helper::func_get_args
	 * @todo Implement testFunc_get_args().
	 */
	public function testFunc_get_args()
	{
		$a = 1;
		$b = 2;

		$this->_testFunc_get_args(&$a, $b);

		$this->assertSame(99, $a);
		$this->assertSame(2, $b);
	}

	private function _testFunc_get_arg()
	{
		$a = &Sco_PHP_Helper::func_get_arg(0);
		$b = &Sco_PHP_Helper::func_get_arg(1);

		$a = 99;
		$b = 10;
	}

	private function _testFunc_get_args()
	{
		$args = Sco_PHP_Helper::func_get_args();
		$args[0] = 99;
		$args[1] = 10;
	}

}


?>
